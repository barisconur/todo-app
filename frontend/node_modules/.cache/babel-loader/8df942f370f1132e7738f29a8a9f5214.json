{"ast":null,"code":"var _jsxFileName = \"/home/cemal-pro/Documents/Repos/todo-app/frontend/src/components/App/container/ToDoPanel/container/AddToDo.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Link } from 'react-router-dom';\nimport { InputGroup, FormControl } from 'react-bootstrap';\nimport plusIcon from \"../../../../../assets/icons/plus-icon.svg\";\nimport appJson from '../../../../../app';\nimport '../view/ToDoPanelView.scss';\n\nconst shortid = require('shortid');\n\nexport default class AddToDo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.eventHandlerForEnterKey = event => {\n      if (event.key === 'Enter') {\n        this.addTodoItem();\n      }\n    };\n\n    this.addTodoItem = () => {\n      const userInput = this.state.input;\n\n      if (userInput === \"\") {\n        alert(\"You cannot add blank todo\");\n        return;\n      }\n\n      this.setState({\n        toDoID: shortid.generate(),\n        input: \"\"\n      }, () => {\n        this.clearInputField();\n        const listItems = appJson.listItems;\n        const selectedList = this.props.selectedList;\n        const newToDoDetails = {\n          creationDate: new Date(),\n          dueDate: null,\n          reminderDate: null,\n          starLevel: 0,\n          toDoDescription: \"\",\n          subTaskList: []\n        };\n        const newToDoStatus = {\n          isStarred: false,\n          isCompleted: false,\n          isDueTimeSet: false\n        };\n        const newToDoItem = {\n          listID: selectedList.listID,\n          toDoID: this.state.toDoID,\n          toDoName: userInput,\n          toDoStatus: newToDoStatus,\n          toDoDetails: newToDoDetails\n        };\n        let currentIndex = appJson.listItems.findIndex(listItem => listItem.listID === selectedList.listID);\n        let currentList = listItems[currentIndex];\n\n        if (1 <= selectedList.listID && selectedList.listID <= 3) {\n          appJson.selectedList = currentList;\n          currentList = listItems[0];\n        }\n\n        appJson.selectedList = currentList;\n        this.props.updateList(currentList);\n        currentList.toDoItems.push(newToDoItem);\n        console.log(appJson);\n      });\n    };\n\n    this.setInputComingFromUser = () => {\n      this.setState({\n        input: this.userInput.current.value\n      });\n    };\n\n    this.clearInputField = () => {\n      this.userInput.current.value = \"\";\n      this.userInput.current.placeholder = \"Add a todo...\";\n    };\n\n    this.userInput = React.createRef();\n    this.state = {\n      input: \"\"\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"add-todo-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"add-item-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      className: \"add-item-btn\",\n      onClick: this.addTodoItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"add-icon\",\n      src: plusIcon,\n      alt: \"add-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    })))), React.createElement(InputGroup, {\n      className: \"mb-3\",\n      onKeyPress: this.eventHandlerForEnterKey,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      className: \"add-todo-field\",\n      ref: this.userInput,\n      type: \"text\",\n      maxLength: \"200\",\n      placeholder: \"Add a todo...\",\n      \"aria-label\": \"Todo-name\",\n      \"aria-describedby\": \"basic-addon2\",\n      onChange: () => this.setInputComingFromUser(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/home/cemal-pro/Documents/Repos/todo-app/frontend/src/components/App/container/ToDoPanel/container/AddToDo.js"],"names":["React","BrowserRouter","Router","Link","InputGroup","FormControl","appJson","shortid","require","AddToDo","Component","constructor","props","eventHandlerForEnterKey","event","key","addTodoItem","userInput","state","input","alert","setState","toDoID","generate","clearInputField","listItems","selectedList","newToDoDetails","creationDate","Date","dueDate","reminderDate","starLevel","toDoDescription","subTaskList","newToDoStatus","isStarred","isCompleted","isDueTimeSet","newToDoItem","listID","toDoName","toDoStatus","toDoDetails","currentIndex","findIndex","listItem","currentList","updateList","toDoItems","push","console","log","setInputComingFromUser","current","value","placeholder","createRef","render","plusIcon"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router, Link} from 'react-router-dom';\nimport {InputGroup, FormControl } from 'react-bootstrap';\n\nimport plusIcon from '../../../../../assets/icons/plus-icon.svg';\n\nimport appJson from '../../../../../app';\n\nimport '../view/ToDoPanelView.scss';\n\nconst shortid = require('shortid');\n\nexport default class AddToDo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.userInput = React.createRef();\n    \n    this.state = {\n      input: \"\"\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"add-todo-container\">\n          <Router>\n            <span className=\"add-item-wrapper\">\n              <Link to=\"/\" className=\"add-item-btn\" onClick= {this.addTodoItem}>\n               <img className=\"add-icon\" src={plusIcon} alt=\"add-icon\"/>\n              </Link>\n            </span>\n          </Router>\n\n          <InputGroup className=\"mb-3\" onKeyPress={this.eventHandlerForEnterKey}>\n            <FormControl className=\"add-todo-field\"\n              ref= {this.userInput}\n              type= \"text\"\n              maxLength= \"200\"\n              placeholder= \"Add a todo...\" \n              aria-label=\"Todo-name\"\n              aria-describedby=\"basic-addon2\"\n              onChange={() => this.setInputComingFromUser()}/>\n          </InputGroup>\n        </div>\n    );  \n  }\n\n  eventHandlerForEnterKey = (event) => {\n    if (event.key === 'Enter') {\n      this.addTodoItem();\n    }\n  }\n\n  addTodoItem = () => {\n    const userInput = this.state.input;\n    if (userInput === \"\") {\n      alert(\"You cannot add blank todo\");\n      return;\n    }\n    this.setState({\n      toDoID: shortid.generate(),\n      input: \"\"\n    }, () => {\n      this.clearInputField();\n      const listItems = appJson.listItems;\n      const selectedList = this.props.selectedList;\n      \n      const newToDoDetails = { creationDate: new Date(),\n                               dueDate: null, \n                               reminderDate: null, \n                               starLevel: 0,\n                               toDoDescription: \"\",\n                               subTaskList: [],                           \n                              };\n\n      const newToDoStatus = { isStarred: false, \n                              isCompleted: false,\n                              isDueTimeSet: false,\n                            };\n                            \n      const newToDoItem = { listID: selectedList.listID,\n                            toDoID: this.state.toDoID, \n                            toDoName: userInput, \n                            toDoStatus: newToDoStatus,\n                            toDoDetails: newToDoDetails\n                          };\n      \n      let currentIndex = appJson.listItems.findIndex(listItem => listItem.listID === selectedList.listID);\n      let currentList = listItems[currentIndex];\n      \n      if (1 <= selectedList.listID && selectedList.listID <= 3) {  \n        appJson.selectedList = currentList;\n        currentList = listItems[0];\n      } \n      appJson.selectedList = currentList;\n      this.props.updateList(currentList);\n      \n      currentList.toDoItems.push(newToDoItem);\n      console.log(appJson);\n    });\n  }\n\n  setInputComingFromUser = () => {\n    this.setState({ input: this.userInput.current.value });\n  }\n\n  clearInputField = () => {\n    this.userInput.current.value = \"\";\n    this.userInput.current.placeholder = \"Add a todo...\";\n  }\n}"]},"metadata":{},"sourceType":"module"}